# GENERATE TIME: Tue Aug 22 08:59:51 2023
# CMD:
# basicsr/train.py --local_rank=0 -opt options/uformer_flare7k_noreflection_option.yml --launcher pytorch

# general settings
name: Upro_36ch_flare7kpp_1108_from_st_norm
model_type: DeflareModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 23

datasets:
  train:
    name: Flare7Kpp
    type: Flare7kpp_Pair_Loader
    image_path: dataset/Flickr24K
    scattering_dict:
      Flare7k_scattering: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare7K/Scattering_Flare/Compound_Flare
      Real_scattering1: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare-R/Compound_Flare
    reflective_dict: 
      Flare7k_reflective: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare7K/Reflective_Flare
      Real_reflective1: ~
    light_dict:
      Flare7k_light: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare7K/Scattering_Flare/Light_Source
      Real_light1: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare-R/Light_Source
    data_ratio: [0.5, 0.5] # or [0.6, 0.4], only a ratio is enough
    transform_base:
      img_size: 512
    transform_flare:
      scale_min: 0.7
      scale_max: 1.2
      translate: 100
      shear: 20
    mask_type: jet
    pin_memory: True

    
    # data loader
    
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda   #[None, 'cuda', 'cpu']

  # Validation data is not provided in our Flare7K dataset, you can generate by yourself
  val:
    name: flarekpp_test
    type: Image_Pair_Loader
    # type: ImageMask_Pair_Loader
    dataroot_gt: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare7K/valid/gt
    dataroot_lq: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare7K/valid/input
    # dataroot_mask: /home/lianjz/Desktop/WorkStation/Flare7K/dataset/Flare7K/valid/mask
    gt_size: 512

# network structures
network_g:
  type: uformerPro
  img_size: 512
  img_ch: 3
  output_ch: 6
  embed_dim: 32
  multi_stage: 1

# path
path:
  pretrain_network_g: ~
  strict_load_g: false
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  ema_decay: 0.9
  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  l1_opt:
    type: L_Abs_pure
    loss_weight: 0.5

  perceptual:
    type: L_percepture
    loss_weight: 0.5
  
  #orth norm
  orth:
    type: Orth_dist
    stride: 1
    loss_weight: 1

  # orth:
    # type: Orth_conv_dist
    # stride: 2
    # padding: 1
    # loss_weight: 1


  # orth:
    # type: Orth_deconv_dist
    # stride: 2
    # padding: 1
    # loss_weight: 0.5

# validation settings
val:
  val_freq: !!float 1e3
  save_img: true

  pbar : True
  suffix: val
  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
